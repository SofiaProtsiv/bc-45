// üìå‚ùóÔ∏èü§ì Intersection Observer API

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
let options = {
  root: document.querySelector('.scroll-list'),
  // root - –µ–ª–µ–º–µ–Ω—Ç, —è–∫–∏–π –≤–∏—Å—Ç—É–ø–∞—î –≤ —Ä–æ–ª—ñ –æ–±–ª–∞—Å—Ç—ñ –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–ª—è target (–ø—Ä–µ–¥–æ–∫ —Ü—ñ–ª—å–æ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∞–±–æ null –¥–ª—è viewport)
  rootMargin: '5px',
  // rootMargin - –≤—ñ–¥—Å—Ç—É–ø–∏ –Ω–∞–≤–∫–æ–ª–æ root (margin —É CSS, –∑–∞ —É–º–æ–≤—á–∞–Ω–Ω—è–º –≤—Å—ñ –≤—ñ–¥—Å—Ç—É–ø–∏ –¥–æ—Ä—ñ–≤–Ω—é—é—Ç—å 0)
  threshold: 0.5,
  // threshold - —á–∏—Å–ª–æ –∞–±–æ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª, —â–æ –≤–∫–∞–∑—É—î –¥–æ–ø—É—Å—Ç–∏–º–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –ø–µ—Ä–µ—Ç–∏–Ω—É target —Ç–∞ root
};

// –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É. –í–∏–∫–ª–∏–∫ callback –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å –ø—Ä–æ –∑–º—ñ–Ω–∏, —â–æ –≤—ñ–¥–±—É–ª–∏—Å—è –∑ —Ü—ñ–ª—å–æ–≤–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º:
let callback = (entries, observer) => {
  entries.forEach(entry => {
    // entry - —Ç–µ, —â–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è
    entry.target; // –ï–ª–µ–º–µ–Ω—Ç, –ø–µ—Ä–µ—Ç–∏–Ω —è–∫–æ–≥–æ –∑ –∫–æ—Ä–µ–Ω–µ–º –ø–µ—Ä–µ—Ç–∏–Ω—É –∑–º—ñ–Ω–∏–≤—Å—è.
    entry.isIntersecting; // —á–∏ —Ü—ñ–ª—å –≤ –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ: true —á–∏ false
    entry.intersectionRatio; // —á–∏—Å–ª–æ –¥–ª—è –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è intersectionRect –¥–æ boundingClientRect.
    entry.time; // DOMHightResTimeStamp, —â–æ –≤–∫–∞–∑—É—î, –∫–æ–ª–∏ –≤—ñ–¥–±—É–≤—Å—è –ø–µ—Ä–µ—Ç–∏–Ω.
    entry.rootBounds; // DOMRectReadOnly –¥–ª—è –∫–æ—Ä–µ–Ω—è —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É.
    entry.boundingClientRect; // DOMRectReadOnly –¥–ª—è —Ü—ñ–ª—ñ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É.
    entry.intersectionRect; // DOMRectReadOnly –¥–ª—è –≤–∏–¥–∏–º–æ—ó —á–∞—Å—Ç–∏–Ω–∏ —Ü—ñ–ª—ñ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É.
  });
};

// –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á
let observer = new IntersectionObserver(callback, options);

// –î–∞–ª—ñ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ü—ñ–ª—å–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç, –∑–∞ —è–∫–∏–º —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á:
let target = document.querySelector('.item');
observer.observe(target);
